{"ast":null,"code":"var _jsxFileName = \"/Users/phil/Desktop/new calc/src/context/langContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Context = /*#__PURE__*/createContext();\nconst supportedLangs = [\"EN\", \"FR\"];\nlet browserLang = navigator.language.slice(0, 2).toUpperCase(); // console.log(browserLang);\n\nif (supportedLangs.indexOf(browserLang) === -1) {\n  console.log(\"Language is not supported\");\n  browserLang = \"EN\";\n}\n\nconst ContextProvider = props => {\n  _s();\n\n  const [lang, setLang] = useState(browserLang); //   console.log(lang);\n\n  const toggleLang = changeLang => {\n    setLang(changeLang);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: {\n      lang,\n      toggleLang\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContextProvider, \"8Xpl60JI+wFYt1ywlu5T6+kn1Ww=\");\n\n_c = ContextProvider;\nexport default ContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"sources":["/Users/phil/Desktop/new calc/src/context/langContext.js"],"names":["React","createContext","useState","Context","supportedLangs","browserLang","navigator","language","slice","toUpperCase","indexOf","console","log","ContextProvider","props","lang","setLang","toggleLang","changeLang","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,QAA+C,OAA/C;;AAEA,OAAO,MAAMC,OAAO,gBAAGF,aAAa,EAA7B;AAEP,MAAMG,cAAc,GAAG,CAAC,IAAD,EAAO,IAAP,CAAvB;AACA,IAAIC,WAAW,GAAGC,SAAS,CAACC,QAAV,CAAmBC,KAAnB,CAAyB,CAAzB,EAA4B,CAA5B,EAA+BC,WAA/B,EAAlB,C,CACA;;AAEA,IAAIL,cAAc,CAACM,OAAf,CAAuBL,WAAvB,MAAwC,CAAC,CAA7C,EAAgD;AAC9CM,EAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACAP,EAAAA,WAAW,GAAG,IAAd;AACD;;AAED,MAAMQ,eAAe,GAAIC,KAAD,IAAW;AAAA;;AACjC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAACG,WAAD,CAAhC,CADiC,CAGjC;;AAEA,QAAMY,UAAU,GAAIC,UAAD,IAAgB;AACjCF,IAAAA,OAAO,CAACE,UAAD,CAAP;AACD,GAFD;;AAIA,sBACE,QAAC,OAAD,CAAS,QAAT;AAAkB,IAAA,KAAK,EAAE;AAAEH,MAAAA,IAAF;AAAQE,MAAAA;AAAR,KAAzB;AAAA,cACGH,KAAK,CAACK;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAdD;;GAAMN,e;;KAAAA,e;AAgBN,eAAeA,eAAf","sourcesContent":["import React, { createContext, useState } from \"react\";\n\nexport const Context = createContext();\n\nconst supportedLangs = [\"EN\", \"FR\"];\nlet browserLang = navigator.language.slice(0, 2).toUpperCase();\n// console.log(browserLang);\n\nif (supportedLangs.indexOf(browserLang) === -1) {\n  console.log(\"Language is not supported\");\n  browserLang = \"EN\";\n}\n\nconst ContextProvider = (props) => {\n  const [lang, setLang] = useState(browserLang);\n\n  //   console.log(lang);\n\n  const toggleLang = (changeLang) => {\n    setLang(changeLang);\n  };\n\n  return (\n    <Context.Provider value={{ lang, toggleLang }}>\n      {props.children}\n    </Context.Provider>\n  );\n};\n\nexport default ContextProvider;\n"]},"metadata":{},"sourceType":"module"}